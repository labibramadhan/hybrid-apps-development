import _ from 'underscore';
export const encryptPersist = (ec, props, ctx) => {
    _.map(props, (prop, field) => {
        if (typeof prop._encrypt !== "undefined" && prop._encrypt && typeof ctx.data !== 'undefined' && typeof ctx.data[field] !== "undefined") {
            ctx.data[field] = ec.encrypt(ctx.data[field]);
        }
    });
}
export const decryptLoaded = (ec, props, ctx) => {
    _.map(props, (prop, field) => {
        if (typeof prop._encrypt !== "undefined" && prop._encrypt && typeof ctx.instance !== 'undefined' && typeof ctx.instance[field] !== "undefined") {
            ctx.instance[field] = ec.decrypt(ctx.instance[field]);
        }
    });
}