import React from 'react';
import Reflux from 'reflux';
import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';
import getMuiTheme from 'material-ui/styles/getMuiTheme';
import Dialog from 'material-ui/Dialog';
import FlatButton from 'material-ui/FlatButton';
import _ from 'underscore';
import {TodoActions, TodoMessages} from 'rs-todo';
import {bootstrapMessage} from 'rs-helper/lib/client';

const muiTheme = getMuiTheme();

export const RSAlert = React.createClass({
    mixins: [
        Reflux.ListenerMixin
    ],
    getInitialState() {
        return {
            open: false,
            message: ''
        }
    },
    componentDidMount(){
        const self = this;
        bootstrapMessage(self, TodoActions, TodoMessages, (message) => {
            self.state.message = message;
            self.state.open = true;
            self.forceUpdate();
        }, 'before', 'confirm');
        self.listenTo(TodoActions.delete.confirmed, () => {
            self.close();
        });
    },
    componentWillUnmount(){
        this.close();
    },
    close() {
        this.state.open = false;
        this.state.message = '';
        this.forceUpdate();
    },
    render() {
        const defaultActions = [
            {
                label: "Cancel",
                primary: false,
                onTouchTap: this.close
            }
        ]
        let propsActions = [];
        if (typeof this.props.actions === "undefined") {
            propsActions = [];
        } else {
            propsActions = this.props.actions;
        }
        let actions = _.map(_.union(defaultActions, propsActions), (obj) => {
            return (
                <FlatButton {...obj} />
            )
        });
        return (
            <Dialog
                actions={actions}
                modal={false}
                open={this.state.open}
                onRequestClose={this.close}
            >
                {this.state.message}
            </Dialog>
        );
    }
});