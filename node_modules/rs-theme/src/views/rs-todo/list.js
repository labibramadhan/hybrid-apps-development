import React from 'react';
import Reflux from 'reflux';
import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';
import {List, ListItem} from 'material-ui/List';
import Checkbox from 'material-ui/Checkbox';
import {grey400} from 'material-ui/styles/colors';
import IconButton from 'material-ui/IconButton';
import MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';
import IconMenu from 'material-ui/IconMenu';
import MenuItem from 'material-ui/MenuItem';
import {TodoStore, TodoActions} from 'rs-todo';

export const RSMuiTodoList = React.createClass({
    mixins: [
        Reflux.ListenerMixin
    ],

    componentDidMount() {
        const self = this;
        self.listenTo(TodoStore, 'updateClass');
    },

    updateClass() {
        this.forceUpdate();
    },

    render() {
        return (
            <div>
                <List>
                    {TodoStore.records.map((t) => { //every single function definition in es6 must be wrapped by () first on its argument(s)
                        let listStyle = (t.completed) ? {color: '#009688'} : {};
                        return (
                            <ListItem
                                key={t.id}
                                leftCheckbox={<Checkbox defaultChecked={t.completed} onCheck={ev => TodoActions.upsert({...t.__data, completed: ev.target.checked})} />}
                                primaryText={t.title}
                                style={listStyle}
                                rightIconButton={
                                <IconMenu iconButtonElement={
                                <IconButton
                                    touch={true}
                                    tooltip="more"
                                    tooltipPosition="bottom-center"
                                >
                                    <MoreVertIcon color={grey400} />
                                </IconButton>
                                }>
                                    <MenuItem onClick={ev => TodoActions.delete(t.id)}>Delete</MenuItem>
                                </IconMenu>
                                }
                            />
                        )
                    })}
                </List>
            </div>
        )
    }
});

export const RSMuiTodoListConfigurator = {
    default: {
        title: "Todo List",
        buttonLink: {
            route: "todo.add"
        },
        buttonText: "Create Todo",
        selectedMenu: 1,
        menuItems: [
            {value: 1, text: 'All'},
            {value: 2, text: 'Active'},
            {value: 3, text: 'Completed'}
        ]
    }
}