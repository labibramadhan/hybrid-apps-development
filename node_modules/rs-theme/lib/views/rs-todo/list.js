'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RSTodoList = exports.RSTodoListConfigurator = exports.alias = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

var _reflux = require('reflux');

var _reflux2 = _interopRequireDefault(_reflux);

var _MuiThemeProvider = require('material-ui/styles/MuiThemeProvider');

var _MuiThemeProvider2 = _interopRequireDefault(_MuiThemeProvider);

var _List = require('material-ui/List');

var _Checkbox = require('material-ui/Checkbox');

var _Checkbox2 = _interopRequireDefault(_Checkbox);

var _colors = require('material-ui/styles/colors');

var _IconButton = require('material-ui/IconButton');

var _IconButton2 = _interopRequireDefault(_IconButton);

var _moreVert = require('material-ui/svg-icons/navigation/more-vert');

var _moreVert2 = _interopRequireDefault(_moreVert);

var _IconMenu = require('material-ui/IconMenu');

var _IconMenu2 = _interopRequireDefault(_IconMenu);

var _MenuItem = require('material-ui/MenuItem');

var _MenuItem2 = _interopRequireDefault(_MenuItem);

var _alert = require('../alert');

var _rsTodo = require('rs-todo');

var _client = require('rs-helper/lib/client');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var alias = exports.alias = "RSTodoList";

var RSTodoListConfigurator = exports.RSTodoListConfigurator = {
    default: {
        title: "",
        buttonLink: {
            route: "todo.add"
        },
        buttonText: "New Todo",
        onMenuChange: function onMenuChange(value, props) {
            return new Promise(function (resolve, reject) {
                var persist = (0, _client.setPersistentStore)(_rsTodo.TodoPersistent, alias, 'filter.completed', value);
                _rsTodo.TodoActions.setFilter('completed', value);
                resolve();
            });
        },
        selectedMenu: function selectedMenu(props) {
            return (0, _client.getPersistentStore)(_rsTodo.TodoPersistent, alias, 'filter.completed', undefined);
        },

        menuItems: [{ value: undefined, text: 'All' }, { value: false, text: 'Active' }, { value: true, text: 'Completed' }]
    }
};

var RSTodoList = exports.RSTodoList = _react2.default.createClass({
    displayName: 'RSTodoList',

    mixins: [_reflux2.default.ListenerMixin],

    getInitialState: function getInitialState() {
        return {};
    },
    componentWillMount: function componentWillMount() {
        var self = this;
        self.listenTo(_rsTodo.TodoStore, 'updateClass');
        (0, _client.getPersistentStoreGroup)(_rsTodo.TodoPersistent, alias, 'filter').then(function (filters) {
            _underscore2.default.each(filters, function (obj) {
                _rsTodo.TodoActions.setFilter(obj.key, obj.value);
            });
        });
        this.listenTo(_rsTodo.TodoActions.delete.confirmed, function (id) {
            _rsTodo.TodoActions.delete(id);
        });
    },
    updateClass: function updateClass() {
        this.forceUpdate();
    },
    render: function render() {
        var _this = this;

        var self = this;
        return _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
                _List.List,
                null,
                _rsTodo.TodoStore.records.map(function (t) {
                    //every single function definition in es6 must be wrapped by () first on its argument(s)
                    var listStyle = t.completed ? { color: '#999', textDecoration: 'line-through' } : {};
                    return _react2.default.createElement(_List.ListItem, {
                        key: t.id,
                        leftCheckbox: _react2.default.createElement(_Checkbox2.default, { defaultChecked: t.completed, onCheck: function onCheck(ev) {
                                return _rsTodo.TodoActions.toggle.triggerAsync(t.id, ev.target.checked);
                            } }),
                        primaryText: t.title,
                        style: listStyle,
                        rightIconButton: _react2.default.createElement(
                            _IconMenu2.default,
                            { iconButtonElement: _react2.default.createElement(
                                    _IconButton2.default,
                                    {
                                        touch: true,
                                        tooltip: 'more',
                                        tooltipPosition: 'bottom-center'
                                    },
                                    _react2.default.createElement(_moreVert2.default, { color: _colors.grey400 })
                                ) },
                            _react2.default.createElement(
                                _MenuItem2.default,
                                { onClick: function onClick(ev) {
                                        self.state.delete = t.id;
                                        _rsTodo.TodoActions.delete.confirm(_extends({}, t, { tokens: t }));
                                    } },
                                'Delete'
                            )
                        )
                    });
                })
            ),
            _react2.default.createElement(_alert.RSAlert, { hook: 'before', childrenHook: 'confirm', actions: [{
                    label: 'Delete',
                    primary: true,
                    onTouchTap: function onTouchTap() {
                        _rsTodo.TodoActions.delete.confirmed(_this.state.delete);
                    }
                }]
            })
        );
    }
});