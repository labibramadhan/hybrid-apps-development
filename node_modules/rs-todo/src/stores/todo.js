import Reflux from 'reflux';
import lbapp from 'loopback-app';

let id = 1;

let Todo = lbapp.models.LocalTodo;

export const actions = Reflux.createActions({ //must be constant
    "create": {asyncResult: true},
    "upsert": {asyncResult: true},
    "delete": {asyncResult: true}
});

export const store = Reflux.createStore({ //must be constant
    listenables: actions,
    init() {
        this.records = [];

        this.refresh();

        Todo.observe('after save', this.refresh);
        Todo.observe('after delete', this.refresh);
    },
    refresh() {
        let self = this;
        Todo.find({}, (err, res) => {
            self.records = res;
            self.trigger();
        });
    },
    onCreate(title){
        let todo = Todo.create({title: title});
        actions.create.completed(todo);
    },
    onUpsert(todo){
        Todo.upsert(todo);
    },
    onDelete(id){
        Todo.destroyById(id);
    }
});